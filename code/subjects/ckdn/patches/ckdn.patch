diff --git a/pyiqa/archs/ckdn_arch.py b/pyiqa/archs/ckdn_arch.py
index 4628fdc..56168aa 100644
--- a/pyiqa/archs/ckdn_arch.py
+++ b/pyiqa/archs/ckdn_arch.py
@@ -265,10 +265,13 @@ class ResNet(nn.Module):
         return dr


-def _resnet(arch, block, layers, pretrained, progress, **kwargs):
+def _resnet(arch, block, layers, pretrained, progress, checkpoint_resnet=None, **kwargs):
     model = ResNet(block, layers, **kwargs)
-    if pretrained:
-        state_dict = load_state_dict_from_url(model_urls[arch], progress=progress)
+    if pretrained or checkpoint_resnet:
+        if checkpoint_resnet:
+            state_dict = torch.load(checkpoint_resnet, map_location=torch.device('cpu'))
+        else:
+            state_dict = load_state_dict_from_url(model_urls[arch], progress=progress)
         keys = state_dict.keys()
         for key in list(keys):
             if 'conv1' in key:
@@ -308,9 +311,10 @@ class CKDN(nn.Module):
                  use_default_preprocess=True,
                  default_mean=(0.485, 0.456, 0.406),
                  default_std=(0.229, 0.224, 0.225),
+                 checkpoint_resnet=None,
                  **kwargs):
         super().__init__()
-        self.net = _resnet('resnet50', Bottleneck, [3, 4, 6, 3], True, True, **kwargs)
+        self.net = _resnet('resnet50', Bottleneck, [3, 4, 6, 3], True, True, checkpoint_resnet=checkpoint_resnet, **kwargs)
         self.use_default_preprocess = use_default_preprocess

         self.default_mean = torch.Tensor(default_mean).view(1, 3, 1, 1)
