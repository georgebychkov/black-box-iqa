diff --git a/pyiqa/archs/ahiq_arch.py b/pyiqa/archs/ahiq_arch.py
index ad4bf7c..3bddac0 100644
--- a/pyiqa/archs/ahiq_arch.py
+++ b/pyiqa/archs/ahiq_arch.py
@@ -175,11 +175,13 @@ class AHIQ(nn.Module):
         default_std=[0.229, 0.224, 0.225],
         pretrained=True,
         pretrained_model_path=None,
+        checkpoint_resnet=None,
+        checkpoint_vit=None
     ):
         super().__init__()
 
-        self.resnet50 = timm.create_model("resnet50", pretrained=True)
-        self.vit = timm.create_model("vit_base_patch8_224", pretrained=True)
+        self.resnet50 = timm.create_model('resnet50', checkpoint_path=checkpoint_resnet)
+        self.vit = timm.create_model('vit_base_patch8_224', checkpoint_path=checkpoint_vit)
         self.fix_network(self.resnet50)
         self.fix_network(self.vit)
 
@@ -193,14 +195,12 @@ class AHIQ(nn.Module):
         self.default_std = torch.Tensor(default_std).view(1, 3, 1, 1)
 
         if pretrained_model_path is not None:
-            load_pretrained_network(
-                self, pretrained_model_path, True, weight_keys="params"
-            )
+            checkpoint = torch.load(pretrained_model_path, map_location=torch.device('cpu'))
         elif pretrained:
             weight_path = load_file_from_url(default_model_urls["pipal"])
             checkpoint = torch.load(weight_path)
-            self.regressor.load_state_dict(checkpoint["regressor_model_state_dict"])
-            self.deform_net.load_state_dict(checkpoint["deform_net_model_state_dict"])
+        self.regressor.load_state_dict(checkpoint["regressor_model_state_dict"])
+        self.deform_net.load_state_dict(checkpoint["deform_net_model_state_dict"])
 
         self.eps = 1e-12
         self.crops = num_crop
